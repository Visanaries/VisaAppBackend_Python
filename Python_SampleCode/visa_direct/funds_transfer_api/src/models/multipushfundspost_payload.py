# coding: utf-8

"""
    Funds Transfer API

    The Funds Transfer API can pull funds from the sender&apos;s Visa account (in preparation for pushing funds to a recipient&apos;s account) in an Account Funding Transaction (AFT).  Additionally, the Funds Transfer API also provides functionality to push funds to the recipient&apos;s Visa account in an Original Credit Transaction (OCT).  If a transaction is declined, the Funds Transfer API can also return the funds to the sender&apos;s funding source in an Account Funding Transaction Reversal (AFTR). The API has been enhanced to allow originators to send their PushFundsTransactions(OCTs) and PullFundsTransactions(AFTs) to Visa for routing to multiple U.S. debit networks.

    OpenAPI spec version: v1
    Contact: 
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class MultipushfundspostPayload(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, business_application_id=None, retrieval_reference_number=None, card_acceptor=None, message_reason_code=None, sender_address=None, sender_city=None, source_of_funds_code=None, recipient_name=None, sender_middle_initial=None, sender_name=None, recipient_state=None, surcharge=None, sender_state_code=None, merchant_category_code=None, sender_last_name=None, merchant_verification_value=None, sharing_group_code=None, acquirer_country_code=None, sender_reference=None, recipient_primary_account_number=None, recipient_last_name=None, national_reimbursement_fee=None, sender_postal_code=None, sender_first_name=None, sender_account_number=None, fee_program_indicator=None, sender_identification_number_business=None, transaction_currency_code=None, acquiring_bin=None, account_type=None, merchant_pseudo_aba_number=None, transaction_identifier=None, local_transaction_date_time=None, recipient_first_name=None, amount=None, sender_date_of_birth=None, recipient_middle_initial=None, recipient_card_expiry_date=None, recipient_country_code=None, sender_identification_number_individual=None, systems_trace_audit_number=None, sender_country_code=None):
        """
        MultipushfundspostPayload - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'business_application_id': 'str',
            'retrieval_reference_number': 'str',
            'card_acceptor': 'CardAcceptor',
            'message_reason_code': 'int',
            'sender_address': 'str',
            'sender_city': 'str',
            'source_of_funds_code': 'str',
            'recipient_name': 'str',
            'sender_middle_initial': 'str',
            'sender_name': 'str',
            'recipient_state': 'str',
            'surcharge': 'str',
            'sender_state_code': 'str',
            'merchant_category_code': 'int',
            'sender_last_name': 'str',
            'merchant_verification_value': 'MerchantVerificationValue',
            'sharing_group_code': 'str',
            'acquirer_country_code': 'int',
            'sender_reference': 'str',
            'recipient_primary_account_number': 'str',
            'recipient_last_name': 'str',
            'national_reimbursement_fee': 'float',
            'sender_postal_code': 'str',
            'sender_first_name': 'str',
            'sender_account_number': 'str',
            'fee_program_indicator': 'str',
            'sender_identification_number_business': 'str',
            'transaction_currency_code': 'str',
            'acquiring_bin': 'int',
            'account_type': 'str',
            'merchant_pseudo_aba_number': 'str',
            'transaction_identifier': 'int',
            'local_transaction_date_time': 'str',
            'recipient_first_name': 'str',
            'amount': 'float',
            'sender_date_of_birth': 'str',
            'recipient_middle_initial': 'str',
            'recipient_card_expiry_date': 'str',
            'recipient_country_code': 'str',
            'sender_identification_number_individual': 'str',
            'systems_trace_audit_number': 'int',
            'sender_country_code': 'str'
        }

        self.attribute_map = {
            'business_application_id': 'businessApplicationId',
            'retrieval_reference_number': 'retrievalReferenceNumber',
            'card_acceptor': 'cardAcceptor',
            'message_reason_code': 'messageReasonCode',
            'sender_address': 'senderAddress',
            'sender_city': 'senderCity',
            'source_of_funds_code': 'sourceOfFundsCode',
            'recipient_name': 'recipientName',
            'sender_middle_initial': 'senderMiddleInitial',
            'sender_name': 'senderName',
            'recipient_state': 'recipientState',
            'surcharge': 'surcharge',
            'sender_state_code': 'senderStateCode',
            'merchant_category_code': 'merchantCategoryCode',
            'sender_last_name': 'senderLastName',
            'merchant_verification_value': 'merchantVerificationValue',
            'sharing_group_code': 'sharingGroupCode',
            'acquirer_country_code': 'acquirerCountryCode',
            'sender_reference': 'senderReference',
            'recipient_primary_account_number': 'recipientPrimaryAccountNumber',
            'recipient_last_name': 'recipientLastName',
            'national_reimbursement_fee': 'nationalReimbursementFee',
            'sender_postal_code': 'senderPostalCode',
            'sender_first_name': 'senderFirstName',
            'sender_account_number': 'senderAccountNumber',
            'fee_program_indicator': 'feeProgramIndicator',
            'sender_identification_number_business': 'senderIdentificationNumberBusiness',
            'transaction_currency_code': 'transactionCurrencyCode',
            'acquiring_bin': 'acquiringBin',
            'account_type': 'accountType',
            'merchant_pseudo_aba_number': 'merchantPseudoAbaNumber',
            'transaction_identifier': 'transactionIdentifier',
            'local_transaction_date_time': 'localTransactionDateTime',
            'recipient_first_name': 'recipientFirstName',
            'amount': 'amount',
            'sender_date_of_birth': 'senderDateOfBirth',
            'recipient_middle_initial': 'recipientMiddleInitial',
            'recipient_card_expiry_date': 'recipientCardExpiryDate',
            'recipient_country_code': 'recipientCountryCode',
            'sender_identification_number_individual': 'senderIdentificationNumberIndividual',
            'systems_trace_audit_number': 'systemsTraceAuditNumber',
            'sender_country_code': 'senderCountryCode'
        }

        self._business_application_id = business_application_id
        self._retrieval_reference_number = retrieval_reference_number
        self._card_acceptor = card_acceptor
        self._message_reason_code = message_reason_code
        self._sender_address = sender_address
        self._sender_city = sender_city
        self._source_of_funds_code = source_of_funds_code
        self._recipient_name = recipient_name
        self._sender_middle_initial = sender_middle_initial
        self._sender_name = sender_name
        self._recipient_state = recipient_state
        self._surcharge = surcharge
        self._sender_state_code = sender_state_code
        self._merchant_category_code = merchant_category_code
        self._sender_last_name = sender_last_name
        self._merchant_verification_value = merchant_verification_value
        self._sharing_group_code = sharing_group_code
        self._acquirer_country_code = acquirer_country_code
        self._sender_reference = sender_reference
        self._recipient_primary_account_number = recipient_primary_account_number
        self._recipient_last_name = recipient_last_name
        self._national_reimbursement_fee = national_reimbursement_fee
        self._sender_postal_code = sender_postal_code
        self._sender_first_name = sender_first_name
        self._sender_account_number = sender_account_number
        self._fee_program_indicator = fee_program_indicator
        self._sender_identification_number_business = sender_identification_number_business
        self._transaction_currency_code = transaction_currency_code
        self._acquiring_bin = acquiring_bin
        self._account_type = account_type
        self._merchant_pseudo_aba_number = merchant_pseudo_aba_number
        self._transaction_identifier = transaction_identifier
        self._local_transaction_date_time = local_transaction_date_time
        self._recipient_first_name = recipient_first_name
        self._amount = amount
        self._sender_date_of_birth = sender_date_of_birth
        self._recipient_middle_initial = recipient_middle_initial
        self._recipient_card_expiry_date = recipient_card_expiry_date
        self._recipient_country_code = recipient_country_code
        self._sender_identification_number_individual = sender_identification_number_individual
        self._systems_trace_audit_number = systems_trace_audit_number
        self._sender_country_code = sender_country_code

    @property
    def business_application_id(self):
        """
        Gets the business_application_id of this MultipushfundspostPayload.
        Identifies the programs' business application type for VisaNet transaction processing<br><br>For Money Transfer, AA applies to transactions where the sender and recipient are the same person and PP applies to transactions where the sender and recipient are not the same person.<br><br>Refer to <a href=\"/request_response_codes#business_application_identifier\">businessApplicationId</a> codes

        :return: The business_application_id of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._business_application_id

    @business_application_id.setter
    def business_application_id(self, business_application_id):
        """
        Sets the business_application_id of this MultipushfundspostPayload.
        Identifies the programs' business application type for VisaNet transaction processing<br><br>For Money Transfer, AA applies to transactions where the sender and recipient are the same person and PP applies to transactions where the sender and recipient are not the same person.<br><br>Refer to <a href=\"/request_response_codes#business_application_identifier\">businessApplicationId</a> codes

        :param business_application_id: The business_application_id of this MultipushfundspostPayload.
        :type: str
        """

        self._business_application_id = business_application_id

    @property
    def retrieval_reference_number(self):
        """
        Gets the retrieval_reference_number of this MultipushfundspostPayload.
        A value used to tie together service calls related to a single financial transaction. When passing Account Funding Transaction (AFT) and an Original Credit Transaction (OCT) methods, this value must differ between the two methods. When passing the Account Funding Transaction Reversal (AFTR) method, this value must match the retrievalReferenceNumber previously passed with the AFT method for this transaction.<br><br> Recommended Format : ydddhhnnnnnn<br><br>The first fours digits must be a valid yddd date in the Julian date format, where the first digit = 0-9 (last digit of current year) and the next three digits = 001-366 (number of the day in the year). hh can be the two digit hour in a 24 hour clock (00-23) during which the transaction is performed.<br><br> nnnnnn can be the systemsTraceAuditNumber or any 6 digit number.

        :return: The retrieval_reference_number of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._retrieval_reference_number

    @retrieval_reference_number.setter
    def retrieval_reference_number(self, retrieval_reference_number):
        """
        Sets the retrieval_reference_number of this MultipushfundspostPayload.
        A value used to tie together service calls related to a single financial transaction. When passing Account Funding Transaction (AFT) and an Original Credit Transaction (OCT) methods, this value must differ between the two methods. When passing the Account Funding Transaction Reversal (AFTR) method, this value must match the retrievalReferenceNumber previously passed with the AFT method for this transaction.<br><br> Recommended Format : ydddhhnnnnnn<br><br>The first fours digits must be a valid yddd date in the Julian date format, where the first digit = 0-9 (last digit of current year) and the next three digits = 001-366 (number of the day in the year). hh can be the two digit hour in a 24 hour clock (00-23) during which the transaction is performed.<br><br> nnnnnn can be the systemsTraceAuditNumber or any 6 digit number.

        :param retrieval_reference_number: The retrieval_reference_number of this MultipushfundspostPayload.
        :type: str
        """
        if retrieval_reference_number is None:
            raise ValueError("Invalid value for `retrieval_reference_number`, must not be `None`")

        self._retrieval_reference_number = retrieval_reference_number

    @property
    def card_acceptor(self):
        """
        Gets the card_acceptor of this MultipushfundspostPayload.

        :return: The card_acceptor of this MultipushfundspostPayload.
        :rtype: CardAcceptor
        """
        return self._card_acceptor

    @card_acceptor.setter
    def card_acceptor(self, card_acceptor):
        """
        Sets the card_acceptor of this MultipushfundspostPayload.

        :param card_acceptor: The card_acceptor of this MultipushfundspostPayload.
        :type: CardAcceptor
        """
        if card_acceptor is None:
            raise ValueError("Invalid value for `card_acceptor`, must not be `None`")

        self._card_acceptor = card_acceptor

    @property
    def message_reason_code(self):
        """
        Gets the message_reason_code of this MultipushfundspostPayload.
        Contains codes that combined with some other fields such as the BAI (Business Application Id) identify some unique use cases. For Sales Tax rebates this field should be populated with the value 5120 (Value-added tax/Sales Tax) along with the businessApplicationId field set to the value 'FD' which indicates this push funds transfer is being conducted in order to facilitate a sales tax refund.

        :return: The message_reason_code of this MultipushfundspostPayload.
        :rtype: int
        """
        return self._message_reason_code

    @message_reason_code.setter
    def message_reason_code(self, message_reason_code):
        """
        Sets the message_reason_code of this MultipushfundspostPayload.
        Contains codes that combined with some other fields such as the BAI (Business Application Id) identify some unique use cases. For Sales Tax rebates this field should be populated with the value 5120 (Value-added tax/Sales Tax) along with the businessApplicationId field set to the value 'FD' which indicates this push funds transfer is being conducted in order to facilitate a sales tax refund.

        :param message_reason_code: The message_reason_code of this MultipushfundspostPayload.
        :type: int
        """

        self._message_reason_code = message_reason_code

    @property
    def sender_address(self):
        """
        Gets the sender_address of this MultipushfundspostPayload.
        If the transaction is a money transfer and cross-border or U.S. domestic, this field must contain the sender's address.<br><br>If the transaction is a funds disbursement and cross-border or U.S. domestic, this field must contain either the address of the merchant or government entity sending the funds disbursement.<br><br>If the transaction is a pre-paid load or credit card bill pay and U.S. domestic, this field must contain the sender's address.

        :return: The sender_address of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_address

    @sender_address.setter
    def sender_address(self, sender_address):
        """
        Sets the sender_address of this MultipushfundspostPayload.
        If the transaction is a money transfer and cross-border or U.S. domestic, this field must contain the sender's address.<br><br>If the transaction is a funds disbursement and cross-border or U.S. domestic, this field must contain either the address of the merchant or government entity sending the funds disbursement.<br><br>If the transaction is a pre-paid load or credit card bill pay and U.S. domestic, this field must contain the sender's address.

        :param sender_address: The sender_address of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_address = sender_address

    @property
    def sender_city(self):
        """
        Gets the sender_city of this MultipushfundspostPayload.
        If the transaction is a money transfer and cross-border or U.S. domestic, this field must contain the sender's city.<br><br>If the transaction is a funds disbursement and cross-border or U.S. domestic, this field must contain either the city of the merchant or government entity sending the funds disbursement.<br><br>If the transaction is a pre-paid load or credit card bill pay and U.S. domestic, this field must contain the sender's city.

        :return: The sender_city of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_city

    @sender_city.setter
    def sender_city(self, sender_city):
        """
        Sets the sender_city of this MultipushfundspostPayload.
        If the transaction is a money transfer and cross-border or U.S. domestic, this field must contain the sender's city.<br><br>If the transaction is a funds disbursement and cross-border or U.S. domestic, this field must contain either the city of the merchant or government entity sending the funds disbursement.<br><br>If the transaction is a pre-paid load or credit card bill pay and U.S. domestic, this field must contain the sender's city.

        :param sender_city: The sender_city of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_city = sender_city

    @property
    def source_of_funds_code(self):
        """
        Gets the source_of_funds_code of this MultipushfundspostPayload.
        If the transaction is a money transfer, the field is required and must contain a valid <a href=\"/request_response_codes#source_of_funds\">sourceOfFundsCode</a> code that matches the funding instrument.<br><br>If the transaction is a funds disbursement, the field is required and most likely contains a \"05\" as the <a href=\"/request_response_codes#source_of_funds\">sourceOfFundsCode</a> code to identify that the merchant or government entity used a deposit account to fund the disbursement<br><br>If the transaction is a pre-paid load, the field is required if the transaction is non-U.S. domestic.<br><br>If the transaction is a credit bill pay, the field is required if the transaction is non-U.S. domestic, and the <a href=\"/request_response_codes#source_of_funds\">sourceOfFundsCode</a> code must not contain a \"01\" or \"06\".<br><br>Refer to <a href=\"/request_response_codes#source_of_funds\">sourceOfFundsCode</a> codes

        :return: The source_of_funds_code of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._source_of_funds_code

    @source_of_funds_code.setter
    def source_of_funds_code(self, source_of_funds_code):
        """
        Sets the source_of_funds_code of this MultipushfundspostPayload.
        If the transaction is a money transfer, the field is required and must contain a valid <a href=\"/request_response_codes#source_of_funds\">sourceOfFundsCode</a> code that matches the funding instrument.<br><br>If the transaction is a funds disbursement, the field is required and most likely contains a \"05\" as the <a href=\"/request_response_codes#source_of_funds\">sourceOfFundsCode</a> code to identify that the merchant or government entity used a deposit account to fund the disbursement<br><br>If the transaction is a pre-paid load, the field is required if the transaction is non-U.S. domestic.<br><br>If the transaction is a credit bill pay, the field is required if the transaction is non-U.S. domestic, and the <a href=\"/request_response_codes#source_of_funds\">sourceOfFundsCode</a> code must not contain a \"01\" or \"06\".<br><br>Refer to <a href=\"/request_response_codes#source_of_funds\">sourceOfFundsCode</a> codes

        :param source_of_funds_code: The source_of_funds_code of this MultipushfundspostPayload.
        :type: str
        """

        self._source_of_funds_code = source_of_funds_code

    @property
    def recipient_name(self):
        """
        Gets the recipient_name of this MultipushfundspostPayload.
        Recipient name is required for cross-border enhanced money transfer OCTs.

        :return: The recipient_name of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._recipient_name

    @recipient_name.setter
    def recipient_name(self, recipient_name):
        """
        Sets the recipient_name of this MultipushfundspostPayload.
        Recipient name is required for cross-border enhanced money transfer OCTs.

        :param recipient_name: The recipient_name of this MultipushfundspostPayload.
        :type: str
        """
        if recipient_name is None:
            raise ValueError("Invalid value for `recipient_name`, must not be `None`")

        self._recipient_name = recipient_name

    @property
    def sender_middle_initial(self):
        """
        Gets the sender_middle_initial of this MultipushfundspostPayload.
        This field contains sender's middle initial

        :return: The sender_middle_initial of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_middle_initial

    @sender_middle_initial.setter
    def sender_middle_initial(self, sender_middle_initial):
        """
        Sets the sender_middle_initial of this MultipushfundspostPayload.
        This field contains sender's middle initial

        :param sender_middle_initial: The sender_middle_initial of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_middle_initial = sender_middle_initial

    @property
    def sender_name(self):
        """
        Gets the sender_name of this MultipushfundspostPayload.
        If the transaction is a money transfer and cross-border or U.S. domestic, this field must contain the sender's name.<br><br>If the transaction is a funds disbursement and cross-border or U.S. domestic, this field must contain either the name of the merchant or government entity sending the funds disbursement.<br><br>If the transaction is a pre-paid load or credit card bill pay and U.S. domestic, this field must contain the sender's name.<br><br>Recommended Format: Last Name/Family Surname 1 + Space + Last Name/Family Surname 2 (optional) + Space + First Name/Given Name + Space + Middle Initial or Middle name (optional) + space<br><br>Example: Doe John A

        :return: The sender_name of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_name

    @sender_name.setter
    def sender_name(self, sender_name):
        """
        Sets the sender_name of this MultipushfundspostPayload.
        If the transaction is a money transfer and cross-border or U.S. domestic, this field must contain the sender's name.<br><br>If the transaction is a funds disbursement and cross-border or U.S. domestic, this field must contain either the name of the merchant or government entity sending the funds disbursement.<br><br>If the transaction is a pre-paid load or credit card bill pay and U.S. domestic, this field must contain the sender's name.<br><br>Recommended Format: Last Name/Family Surname 1 + Space + Last Name/Family Surname 2 (optional) + Space + First Name/Given Name + Space + Middle Initial or Middle name (optional) + space<br><br>Example: Doe John A

        :param sender_name: The sender_name of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_name = sender_name

    @property
    def recipient_state(self):
        """
        Gets the recipient_state of this MultipushfundspostPayload.
        Required if RecipientCountryCode is either 124(CAN) or 840(USA) 

        :return: The recipient_state of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._recipient_state

    @recipient_state.setter
    def recipient_state(self, recipient_state):
        """
        Sets the recipient_state of this MultipushfundspostPayload.
        Required if RecipientCountryCode is either 124(CAN) or 840(USA) 

        :param recipient_state: The recipient_state of this MultipushfundspostPayload.
        :type: str
        """

        self._recipient_state = recipient_state

    @property
    def surcharge(self):
        """
        Gets the surcharge of this MultipushfundspostPayload.
        When present, this field contains the sender's surcharge as assessed by the originator. Values in this field must be in the same currency and format as defined in the amount field.<br><br><b>Note:</b><br>Supported only in the US.

        :return: The surcharge of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._surcharge

    @surcharge.setter
    def surcharge(self, surcharge):
        """
        Sets the surcharge of this MultipushfundspostPayload.
        When present, this field contains the sender's surcharge as assessed by the originator. Values in this field must be in the same currency and format as defined in the amount field.<br><br><b>Note:</b><br>Supported only in the US.

        :param surcharge: The surcharge of this MultipushfundspostPayload.
        :type: str
        """

        self._surcharge = surcharge

    @property
    def sender_state_code(self):
        """
        Gets the sender_state_code of this MultipushfundspostPayload.
        Required if SenderCountryCode is either 124(CAN) or 840(USA)

        :return: The sender_state_code of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_state_code

    @sender_state_code.setter
    def sender_state_code(self, sender_state_code):
        """
        Sets the sender_state_code of this MultipushfundspostPayload.
        Required if SenderCountryCode is either 124(CAN) or 840(USA)

        :param sender_state_code: The sender_state_code of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_state_code = sender_state_code

    @property
    def merchant_category_code(self):
        """
        Gets the merchant_category_code of this MultipushfundspostPayload.
        If provided, then the value overrides the one present in onboarding data. If the merchantCategoryCode value is not populated in onboarding data then this field is mandatory.<br><br>If not provided, then the value will default to the values provided during onboarding (when the services are provisioned)<b>Note:</b> required if not provided during onboarding

        :return: The merchant_category_code of this MultipushfundspostPayload.
        :rtype: int
        """
        return self._merchant_category_code

    @merchant_category_code.setter
    def merchant_category_code(self, merchant_category_code):
        """
        Sets the merchant_category_code of this MultipushfundspostPayload.
        If provided, then the value overrides the one present in onboarding data. If the merchantCategoryCode value is not populated in onboarding data then this field is mandatory.<br><br>If not provided, then the value will default to the values provided during onboarding (when the services are provisioned)<b>Note:</b> required if not provided during onboarding

        :param merchant_category_code: The merchant_category_code of this MultipushfundspostPayload.
        :type: int
        """

        self._merchant_category_code = merchant_category_code

    @property
    def sender_last_name(self):
        """
        Gets the sender_last_name of this MultipushfundspostPayload.
        This field contains sender's last name

        :return: The sender_last_name of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_last_name

    @sender_last_name.setter
    def sender_last_name(self, sender_last_name):
        """
        Sets the sender_last_name of this MultipushfundspostPayload.
        This field contains sender's last name

        :param sender_last_name: The sender_last_name of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_last_name = sender_last_name

    @property
    def merchant_verification_value(self):
        """
        Gets the merchant_verification_value of this MultipushfundspostPayload.

        :return: The merchant_verification_value of this MultipushfundspostPayload.
        :rtype: MerchantVerificationValue
        """
        return self._merchant_verification_value

    @merchant_verification_value.setter
    def merchant_verification_value(self, merchant_verification_value):
        """
        Sets the merchant_verification_value of this MultipushfundspostPayload.

        :param merchant_verification_value: The merchant_verification_value of this MultipushfundspostPayload.
        :type: MerchantVerificationValue
        """

        self._merchant_verification_value = merchant_verification_value

    @property
    def sharing_group_code(self):
        """
        Gets the sharing_group_code of this MultipushfundspostPayload.
        This field is optionally used by Push Payments Gateway participants (merchants and acquirers) to specify the network access priority.<br><br>Refer to <a href=\"/request_response_codes#network_id_and_sharing_group_code\">Sharing Group Code</a><br><br><b>Note:</b><br>Supported only in US for domestic transactions involving Push Payments Gateway Service.

        :return: The sharing_group_code of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sharing_group_code

    @sharing_group_code.setter
    def sharing_group_code(self, sharing_group_code):
        """
        Sets the sharing_group_code of this MultipushfundspostPayload.
        This field is optionally used by Push Payments Gateway participants (merchants and acquirers) to specify the network access priority.<br><br>Refer to <a href=\"/request_response_codes#network_id_and_sharing_group_code\">Sharing Group Code</a><br><br><b>Note:</b><br>Supported only in US for domestic transactions involving Push Payments Gateway Service.

        :param sharing_group_code: The sharing_group_code of this MultipushfundspostPayload.
        :type: str
        """

        self._sharing_group_code = sharing_group_code

    @property
    def acquirer_country_code(self):
        """
        Gets the acquirer_country_code of this MultipushfundspostPayload.
        Use a 3-digit numeric country code for the country of the BIN under which your Visa Direct solution is registered. This must match the information provided during program enrollment.<br><br>Refer to <a href=\"/request_response_codes#iso_country_and_currency_codes\">ISO Codes</a>

        :return: The acquirer_country_code of this MultipushfundspostPayload.
        :rtype: int
        """
        return self._acquirer_country_code

    @acquirer_country_code.setter
    def acquirer_country_code(self, acquirer_country_code):
        """
        Sets the acquirer_country_code of this MultipushfundspostPayload.
        Use a 3-digit numeric country code for the country of the BIN under which your Visa Direct solution is registered. This must match the information provided during program enrollment.<br><br>Refer to <a href=\"/request_response_codes#iso_country_and_currency_codes\">ISO Codes</a>

        :param acquirer_country_code: The acquirer_country_code of this MultipushfundspostPayload.
        :type: int
        """
        if acquirer_country_code is None:
            raise ValueError("Invalid value for `acquirer_country_code`, must not be `None`")

        self._acquirer_country_code = acquirer_country_code

    @property
    def sender_reference(self):
        """
        Gets the sender_reference of this MultipushfundspostPayload.
        If the transaction is a money transfer, pre-paid load, or credit card bill pay, and if the sender intends to fund the transaction with a non-financial instrument (for example, cash), a reference number unique to the sender is required.<br><br>If the transaction is a funds disbursement, the field is required.<br><br> This field is required if senderAccountNumber is not sent.

        :return: The sender_reference of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_reference

    @sender_reference.setter
    def sender_reference(self, sender_reference):
        """
        Sets the sender_reference of this MultipushfundspostPayload.
        If the transaction is a money transfer, pre-paid load, or credit card bill pay, and if the sender intends to fund the transaction with a non-financial instrument (for example, cash), a reference number unique to the sender is required.<br><br>If the transaction is a funds disbursement, the field is required.<br><br> This field is required if senderAccountNumber is not sent.

        :param sender_reference: The sender_reference of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_reference = sender_reference

    @property
    def recipient_primary_account_number(self):
        """
        Gets the recipient_primary_account_number of this MultipushfundspostPayload.
        The recipient's PAN.

        :return: The recipient_primary_account_number of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._recipient_primary_account_number

    @recipient_primary_account_number.setter
    def recipient_primary_account_number(self, recipient_primary_account_number):
        """
        Sets the recipient_primary_account_number of this MultipushfundspostPayload.
        The recipient's PAN.

        :param recipient_primary_account_number: The recipient_primary_account_number of this MultipushfundspostPayload.
        :type: str
        """

        self._recipient_primary_account_number = recipient_primary_account_number

    @property
    def recipient_last_name(self):
        """
        Gets the recipient_last_name of this MultipushfundspostPayload.
        When present, this field contains recipient's last name

        :return: The recipient_last_name of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._recipient_last_name

    @recipient_last_name.setter
    def recipient_last_name(self, recipient_last_name):
        """
        Sets the recipient_last_name of this MultipushfundspostPayload.
        When present, this field contains recipient's last name

        :param recipient_last_name: The recipient_last_name of this MultipushfundspostPayload.
        :type: str
        """

        self._recipient_last_name = recipient_last_name

    @property
    def national_reimbursement_fee(self):
        """
        Gets the national_reimbursement_fee of this MultipushfundspostPayload.
        When present, this field contains the IRF fees.

        :return: The national_reimbursement_fee of this MultipushfundspostPayload.
        :rtype: float
        """
        return self._national_reimbursement_fee

    @national_reimbursement_fee.setter
    def national_reimbursement_fee(self, national_reimbursement_fee):
        """
        Sets the national_reimbursement_fee of this MultipushfundspostPayload.
        When present, this field contains the IRF fees.

        :param national_reimbursement_fee: The national_reimbursement_fee of this MultipushfundspostPayload.
        :type: float
        """

        self._national_reimbursement_fee = national_reimbursement_fee

    @property
    def sender_postal_code(self):
        """
        Gets the sender_postal_code of this MultipushfundspostPayload.
        When present, this field contains the sender's postal code

        :return: The sender_postal_code of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_postal_code

    @sender_postal_code.setter
    def sender_postal_code(self, sender_postal_code):
        """
        Sets the sender_postal_code of this MultipushfundspostPayload.
        When present, this field contains the sender's postal code

        :param sender_postal_code: The sender_postal_code of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_postal_code = sender_postal_code

    @property
    def sender_first_name(self):
        """
        Gets the sender_first_name of this MultipushfundspostPayload.
        This field contains sender's first name

        :return: The sender_first_name of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_first_name

    @sender_first_name.setter
    def sender_first_name(self, sender_first_name):
        """
        Sets the sender_first_name of this MultipushfundspostPayload.
        This field contains sender's first name

        :param sender_first_name: The sender_first_name of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_first_name = sender_first_name

    @property
    def sender_account_number(self):
        """
        Gets the sender_account_number of this MultipushfundspostPayload.
        If the transaction is a money transfer, pre-paid load, or credit card bill pay, and if the sender intends to fund the transaction with a financial instrument (for example, debit card), and if the SenderCardId attribute is not sent, this field is required and must contain the sender's account number. <br><br>If the transaction is a funds disbursement, the field is not required.

        :return: The sender_account_number of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_account_number

    @sender_account_number.setter
    def sender_account_number(self, sender_account_number):
        """
        Sets the sender_account_number of this MultipushfundspostPayload.
        If the transaction is a money transfer, pre-paid load, or credit card bill pay, and if the sender intends to fund the transaction with a financial instrument (for example, debit card), and if the SenderCardId attribute is not sent, this field is required and must contain the sender's account number. <br><br>If the transaction is a funds disbursement, the field is not required.

        :param sender_account_number: The sender_account_number of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_account_number = sender_account_number

    @property
    def fee_program_indicator(self):
        """
        Gets the fee_program_indicator of this MultipushfundspostPayload.
        <b>Note:</b> If present, a valid value is required. Spaces or special characters are not allowed.

        :return: The fee_program_indicator of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._fee_program_indicator

    @fee_program_indicator.setter
    def fee_program_indicator(self, fee_program_indicator):
        """
        Sets the fee_program_indicator of this MultipushfundspostPayload.
        <b>Note:</b> If present, a valid value is required. Spaces or special characters are not allowed.

        :param fee_program_indicator: The fee_program_indicator of this MultipushfundspostPayload.
        :type: str
        """

        self._fee_program_indicator = fee_program_indicator

    @property
    def sender_identification_number_business(self):
        """
        Gets the sender_identification_number_business of this MultipushfundspostPayload.
        This is an alphanumeric value that carries the sender’s identification number issued to the sender by the government or an authorized national entity. This field is to be used if the sender is a business (e.g. Disbursements)

        :return: The sender_identification_number_business of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_identification_number_business

    @sender_identification_number_business.setter
    def sender_identification_number_business(self, sender_identification_number_business):
        """
        Sets the sender_identification_number_business of this MultipushfundspostPayload.
        This is an alphanumeric value that carries the sender’s identification number issued to the sender by the government or an authorized national entity. This field is to be used if the sender is a business (e.g. Disbursements)

        :param sender_identification_number_business: The sender_identification_number_business of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_identification_number_business = sender_identification_number_business

    @property
    def transaction_currency_code(self):
        """
        Gets the transaction_currency_code of this MultipushfundspostPayload.
        Use a 3-character alpha or numeric currency code for currency of the sender. You should (unless prohibited by local law / regulation) use the billingCurrencyCode obtained from the Funds Transfer Attribute Inquiry API under Payment Account Attribute Inquiry. <br><br>Refer to <a href=\"/request_response_codes#iso_country_and_currency_codes\">ISO Codes</a>

        :return: The transaction_currency_code of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._transaction_currency_code

    @transaction_currency_code.setter
    def transaction_currency_code(self, transaction_currency_code):
        """
        Sets the transaction_currency_code of this MultipushfundspostPayload.
        Use a 3-character alpha or numeric currency code for currency of the sender. You should (unless prohibited by local law / regulation) use the billingCurrencyCode obtained from the Funds Transfer Attribute Inquiry API under Payment Account Attribute Inquiry. <br><br>Refer to <a href=\"/request_response_codes#iso_country_and_currency_codes\">ISO Codes</a>

        :param transaction_currency_code: The transaction_currency_code of this MultipushfundspostPayload.
        :type: str
        """
        if transaction_currency_code is None:
            raise ValueError("Invalid value for `transaction_currency_code`, must not be `None`")

        self._transaction_currency_code = transaction_currency_code

    @property
    def acquiring_bin(self):
        """
        Gets the acquiring_bin of this MultipushfundspostPayload.
        The Bank Identification Number (BIN) under which the Visa Direct solution is registered. This must match the information provided during enrollment.

        :return: The acquiring_bin of this MultipushfundspostPayload.
        :rtype: int
        """
        return self._acquiring_bin

    @acquiring_bin.setter
    def acquiring_bin(self, acquiring_bin):
        """
        Sets the acquiring_bin of this MultipushfundspostPayload.
        The Bank Identification Number (BIN) under which the Visa Direct solution is registered. This must match the information provided during enrollment.

        :param acquiring_bin: The acquiring_bin of this MultipushfundspostPayload.
        :type: int
        """
        if acquiring_bin is None:
            raise ValueError("Invalid value for `acquiring_bin`, must not be `None`")

        self._acquiring_bin = acquiring_bin

    @property
    def account_type(self):
        """
        Gets the account_type of this MultipushfundspostPayload.
        This is used to identify the account type of the senderPrimaryAccountNumber in the request. Below are the possible values.<br><br> 00-Not applicable<br> 10-Saving account<br> 20-Checking account<br> 30-Credit card account<br> 40-Universal account<br><br>Default is set to \"00\" if not provided.

        :return: The account_type of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """
        Sets the account_type of this MultipushfundspostPayload.
        This is used to identify the account type of the senderPrimaryAccountNumber in the request. Below are the possible values.<br><br> 00-Not applicable<br> 10-Saving account<br> 20-Checking account<br> 30-Credit card account<br> 40-Universal account<br><br>Default is set to \"00\" if not provided.

        :param account_type: The account_type of this MultipushfundspostPayload.
        :type: str
        """

        self._account_type = account_type

    @property
    def merchant_pseudo_aba_number(self):
        """
        Gets the merchant_pseudo_aba_number of this MultipushfundspostPayload.
        This is a number that uniquely identifies the originator when they sign up to send Push Payment Gateway transactions. On enrollment, an originator will get a single pseudo-value that is assigned by Visa. The other networks will assign their own unique values for the originator.<br><br><b>Note:</b><br>Supported only in US for domestic transactions involving Push Payments Gateway Service.

        :return: The merchant_pseudo_aba_number of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._merchant_pseudo_aba_number

    @merchant_pseudo_aba_number.setter
    def merchant_pseudo_aba_number(self, merchant_pseudo_aba_number):
        """
        Sets the merchant_pseudo_aba_number of this MultipushfundspostPayload.
        This is a number that uniquely identifies the originator when they sign up to send Push Payment Gateway transactions. On enrollment, an originator will get a single pseudo-value that is assigned by Visa. The other networks will assign their own unique values for the originator.<br><br><b>Note:</b><br>Supported only in US for domestic transactions involving Push Payments Gateway Service.

        :param merchant_pseudo_aba_number: The merchant_pseudo_aba_number of this MultipushfundspostPayload.
        :type: str
        """

        self._merchant_pseudo_aba_number = merchant_pseudo_aba_number

    @property
    def transaction_identifier(self):
        """
        Gets the transaction_identifier of this MultipushfundspostPayload.
        The VisaNet transaction identifier. If you have previously sent an AFT, this field must include the VisaNet transaction identifier returned in the AFT response.

        :return: The transaction_identifier of this MultipushfundspostPayload.
        :rtype: int
        """
        return self._transaction_identifier

    @transaction_identifier.setter
    def transaction_identifier(self, transaction_identifier):
        """
        Sets the transaction_identifier of this MultipushfundspostPayload.
        The VisaNet transaction identifier. If you have previously sent an AFT, this field must include the VisaNet transaction identifier returned in the AFT response.

        :param transaction_identifier: The transaction_identifier of this MultipushfundspostPayload.
        :type: int
        """

        self._transaction_identifier = transaction_identifier

    @property
    def local_transaction_date_time(self):
        """
        Gets the local_transaction_date_time of this MultipushfundspostPayload.
        

        :return: The local_transaction_date_time of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._local_transaction_date_time

    @local_transaction_date_time.setter
    def local_transaction_date_time(self, local_transaction_date_time):
        """
        Sets the local_transaction_date_time of this MultipushfundspostPayload.
        

        :param local_transaction_date_time: The local_transaction_date_time of this MultipushfundspostPayload.
        :type: str
        """
        if local_transaction_date_time is None:
            raise ValueError("Invalid value for `local_transaction_date_time`, must not be `None`")

        self._local_transaction_date_time = local_transaction_date_time

    @property
    def recipient_first_name(self):
        """
        Gets the recipient_first_name of this MultipushfundspostPayload.
        When present, this field contains recipient's first name

        :return: The recipient_first_name of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._recipient_first_name

    @recipient_first_name.setter
    def recipient_first_name(self, recipient_first_name):
        """
        Sets the recipient_first_name of this MultipushfundspostPayload.
        When present, this field contains recipient's first name

        :param recipient_first_name: The recipient_first_name of this MultipushfundspostPayload.
        :type: str
        """

        self._recipient_first_name = recipient_first_name

    @property
    def amount(self):
        """
        Gets the amount of this MultipushfundspostPayload.
        The transaction amount to be delivered to the recipient.

        :return: The amount of this MultipushfundspostPayload.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """
        Sets the amount of this MultipushfundspostPayload.
        The transaction amount to be delivered to the recipient.

        :param amount: The amount of this MultipushfundspostPayload.
        :type: float
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")

        self._amount = amount

    @property
    def sender_date_of_birth(self):
        """
        Gets the sender_date_of_birth of this MultipushfundspostPayload.
        The birth date for the sender 

        :return: The sender_date_of_birth of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_date_of_birth

    @sender_date_of_birth.setter
    def sender_date_of_birth(self, sender_date_of_birth):
        """
        Sets the sender_date_of_birth of this MultipushfundspostPayload.
        The birth date for the sender 

        :param sender_date_of_birth: The sender_date_of_birth of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_date_of_birth = sender_date_of_birth

    @property
    def recipient_middle_initial(self):
        """
        Gets the recipient_middle_initial of this MultipushfundspostPayload.
        When present, this field contains recipient's middle initial

        :return: The recipient_middle_initial of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._recipient_middle_initial

    @recipient_middle_initial.setter
    def recipient_middle_initial(self, recipient_middle_initial):
        """
        Sets the recipient_middle_initial of this MultipushfundspostPayload.
        When present, this field contains recipient's middle initial

        :param recipient_middle_initial: The recipient_middle_initial of this MultipushfundspostPayload.
        :type: str
        """

        self._recipient_middle_initial = recipient_middle_initial

    @property
    def recipient_card_expiry_date(self):
        """
        Gets the recipient_card_expiry_date of this MultipushfundspostPayload.
        The expiration date for the recipient's primary account number in  recipientPrimaryAccountNumber

        :return: The recipient_card_expiry_date of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._recipient_card_expiry_date

    @recipient_card_expiry_date.setter
    def recipient_card_expiry_date(self, recipient_card_expiry_date):
        """
        Sets the recipient_card_expiry_date of this MultipushfundspostPayload.
        The expiration date for the recipient's primary account number in  recipientPrimaryAccountNumber

        :param recipient_card_expiry_date: The recipient_card_expiry_date of this MultipushfundspostPayload.
        :type: str
        """

        self._recipient_card_expiry_date = recipient_card_expiry_date

    @property
    def recipient_country_code(self):
        """
        Gets the recipient_country_code of this MultipushfundspostPayload.
        when present, this field contains recipient's country code <br><br>Refer to <a href=\"/request_response_codes#iso_country_codes\">ISO Codes</a>

        :return: The recipient_country_code of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._recipient_country_code

    @recipient_country_code.setter
    def recipient_country_code(self, recipient_country_code):
        """
        Sets the recipient_country_code of this MultipushfundspostPayload.
        when present, this field contains recipient's country code <br><br>Refer to <a href=\"/request_response_codes#iso_country_codes\">ISO Codes</a>

        :param recipient_country_code: The recipient_country_code of this MultipushfundspostPayload.
        :type: str
        """

        self._recipient_country_code = recipient_country_code

    @property
    def sender_identification_number_individual(self):
        """
        Gets the sender_identification_number_individual of this MultipushfundspostPayload.
        This is an alphanumeric value that carries the sender’s identification number issued to the sender by the government or an authorized national entity. This field is to be used if the sender is an Individual (e.g. P2P payments)

        :return: The sender_identification_number_individual of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_identification_number_individual

    @sender_identification_number_individual.setter
    def sender_identification_number_individual(self, sender_identification_number_individual):
        """
        Sets the sender_identification_number_individual of this MultipushfundspostPayload.
        This is an alphanumeric value that carries the sender’s identification number issued to the sender by the government or an authorized national entity. This field is to be used if the sender is an Individual (e.g. P2P payments)

        :param sender_identification_number_individual: The sender_identification_number_individual of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_identification_number_individual = sender_identification_number_individual

    @property
    def systems_trace_audit_number(self):
        """
        Gets the systems_trace_audit_number of this MultipushfundspostPayload.
        A unique value should be used for each API method. However, when passing the (AFTR) method, this value must match the systemsTraceAuditNumber previously passed with the AFT method for the current transaction.

        :return: The systems_trace_audit_number of this MultipushfundspostPayload.
        :rtype: int
        """
        return self._systems_trace_audit_number

    @systems_trace_audit_number.setter
    def systems_trace_audit_number(self, systems_trace_audit_number):
        """
        Sets the systems_trace_audit_number of this MultipushfundspostPayload.
        A unique value should be used for each API method. However, when passing the (AFTR) method, this value must match the systemsTraceAuditNumber previously passed with the AFT method for the current transaction.

        :param systems_trace_audit_number: The systems_trace_audit_number of this MultipushfundspostPayload.
        :type: int
        """
        if systems_trace_audit_number is None:
            raise ValueError("Invalid value for `systems_trace_audit_number`, must not be `None`")

        self._systems_trace_audit_number = systems_trace_audit_number

    @property
    def sender_country_code(self):
        """
        Gets the sender_country_code of this MultipushfundspostPayload.
        If the transaction is a money transfer and cross-border or U.S. domestic, this field must contain the sender's country code.<br><br>If the transaction is a funds disbursement and cross-border or U.S. domestic, this field must contain either the country code of the merchant or government entity sending the funds disbursement.<br><br>If the transaction is a pre-paid load or credit card bill pay and U.S. domestic, this field must contain the sender's country code.<br><br>Alpha or numeric country code can be supported.<br><br>This field is required when sending the transactions to some of the US debit networks.<br><br>Refer to <a href=\"/request_response_codes#iso_country_and_currency_codes\">ISO Codes</a>

        :return: The sender_country_code of this MultipushfundspostPayload.
        :rtype: str
        """
        return self._sender_country_code

    @sender_country_code.setter
    def sender_country_code(self, sender_country_code):
        """
        Sets the sender_country_code of this MultipushfundspostPayload.
        If the transaction is a money transfer and cross-border or U.S. domestic, this field must contain the sender's country code.<br><br>If the transaction is a funds disbursement and cross-border or U.S. domestic, this field must contain either the country code of the merchant or government entity sending the funds disbursement.<br><br>If the transaction is a pre-paid load or credit card bill pay and U.S. domestic, this field must contain the sender's country code.<br><br>Alpha or numeric country code can be supported.<br><br>This field is required when sending the transactions to some of the US debit networks.<br><br>Refer to <a href=\"/request_response_codes#iso_country_and_currency_codes\">ISO Codes</a>

        :param sender_country_code: The sender_country_code of this MultipushfundspostPayload.
        :type: str
        """

        self._sender_country_code = sender_country_code

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, MultipushfundspostPayload):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

# ----------------------------------------------------------------------------------------------------------------------
# © Copyright 2018 Visa. All Rights Reserved.
#
# NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
# and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
# rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
#
# By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
# (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
# programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
# THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
# FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
# ----------------------------------------------------------------------------------------------------------------------