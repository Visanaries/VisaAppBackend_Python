# coding: utf-8

"""
    Payment Account Validation API

    The Payment Account Validation API allows applications to run validations of the payment account before processing a transaction ensuring greater probability of success and allowing for a more seamless transaction flow.

    OpenAPI spec version: v1
    Contact: 
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class CardvalidationpostResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, approval_code=None, card_verification_results=None, card_authentication_results=None, transaction_identifier=None, cardholder_authentication_verification_results=None, cvv2_result_code=None, response_code=None, action_code=None, address_verification_results=None):
        """
        CardvalidationpostResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'approval_code': 'str',
            'card_verification_results': 'str',
            'card_authentication_results': 'str',
            'transaction_identifier': 'int',
            'cardholder_authentication_verification_results': 'str',
            'cvv2_result_code': 'str',
            'response_code': 'str',
            'action_code': 'str',
            'address_verification_results': 'str'
        }

        self.attribute_map = {
            'approval_code': 'approvalCode',
            'card_verification_results': 'cardVerificationResults',
            'card_authentication_results': 'cardAuthenticationResults',
            'transaction_identifier': 'transactionIdentifier',
            'cardholder_authentication_verification_results': 'cardholderAuthenticationVerificationResults',
            'cvv2_result_code': 'cvv2ResultCode',
            'response_code': 'responseCode',
            'action_code': 'actionCode',
            'address_verification_results': 'addressVerificationResults'
        }

        self._approval_code = approval_code
        self._card_verification_results = card_verification_results
        self._card_authentication_results = card_authentication_results
        self._transaction_identifier = transaction_identifier
        self._cardholder_authentication_verification_results = cardholder_authentication_verification_results
        self._cvv2_result_code = cvv2_result_code
        self._response_code = response_code
        self._action_code = action_code
        self._address_verification_results = address_verification_results

    @property
    def approval_code(self):
        """
        Gets the approval_code of this CardvalidationpostResponse.
        The authorization code from the issuer.

        :return: The approval_code of this CardvalidationpostResponse.
        :rtype: str
        """
        return self._approval_code

    @approval_code.setter
    def approval_code(self, approval_code):
        """
        Sets the approval_code of this CardvalidationpostResponse.
        The authorization code from the issuer.

        :param approval_code: The approval_code of this CardvalidationpostResponse.
        :type: str
        """

        self._approval_code = approval_code

    @property
    def card_verification_results(self):
        """
        Gets the card_verification_results of this CardvalidationpostResponse.
        A Visa-defined code indicating Card Verification Value (CVV), iCVV (Integrated Chip Card CVV) or dCVV (dynamic CVV) verification results. <br>Refer to <a href=\"/request_response_codes#cvv_icvv_results_codes\"> CVV/iCVV Results Codes.</a><br><b>Note: </b>Reserved for future use

        :return: The card_verification_results of this CardvalidationpostResponse.
        :rtype: str
        """
        return self._card_verification_results

    @card_verification_results.setter
    def card_verification_results(self, card_verification_results):
        """
        Sets the card_verification_results of this CardvalidationpostResponse.
        A Visa-defined code indicating Card Verification Value (CVV), iCVV (Integrated Chip Card CVV) or dCVV (dynamic CVV) verification results. <br>Refer to <a href=\"/request_response_codes#cvv_icvv_results_codes\"> CVV/iCVV Results Codes.</a><br><b>Note: </b>Reserved for future use

        :param card_verification_results: The card_verification_results of this CardvalidationpostResponse.
        :type: str
        """

        self._card_verification_results = card_verification_results

    @property
    def card_authentication_results(self):
        """
        Gets the card_authentication_results of this CardvalidationpostResponse.
        A Visa-defined code indicating Online Card Authentication Method results. <br>Refer to <a href=\"/request_response_codes#card_authentication_results\">cardAuthenticationResults.</a><br><b>Note: </b>Reserved for future use

        :return: The card_authentication_results of this CardvalidationpostResponse.
        :rtype: str
        """
        return self._card_authentication_results

    @card_authentication_results.setter
    def card_authentication_results(self, card_authentication_results):
        """
        Sets the card_authentication_results of this CardvalidationpostResponse.
        A Visa-defined code indicating Online Card Authentication Method results. <br>Refer to <a href=\"/request_response_codes#card_authentication_results\">cardAuthenticationResults.</a><br><b>Note: </b>Reserved for future use

        :param card_authentication_results: The card_authentication_results of this CardvalidationpostResponse.
        :type: str
        """

        self._card_authentication_results = card_authentication_results

    @property
    def transaction_identifier(self):
        """
        Gets the transaction_identifier of this CardvalidationpostResponse.
        The VisaNet reference number for the transaction.

        :return: The transaction_identifier of this CardvalidationpostResponse.
        :rtype: int
        """
        return self._transaction_identifier

    @transaction_identifier.setter
    def transaction_identifier(self, transaction_identifier):
        """
        Sets the transaction_identifier of this CardvalidationpostResponse.
        The VisaNet reference number for the transaction.

        :param transaction_identifier: The transaction_identifier of this CardvalidationpostResponse.
        :type: int
        """
        if transaction_identifier is None:
            raise ValueError("Invalid value for `transaction_identifier`, must not be `None`")

        self._transaction_identifier = transaction_identifier

    @property
    def cardholder_authentication_verification_results(self):
        """
        Gets the cardholder_authentication_verification_results of this CardvalidationpostResponse.
        Results of the Cardholder Authentication Verification Value (CAVV) validation. <br>Refer to <a href=\"/request_response_codes#cardholder_authentication_verification_value\">CAVV Results Codes.</a><br><b>Note: </b>Reserved for future use

        :return: The cardholder_authentication_verification_results of this CardvalidationpostResponse.
        :rtype: str
        """
        return self._cardholder_authentication_verification_results

    @cardholder_authentication_verification_results.setter
    def cardholder_authentication_verification_results(self, cardholder_authentication_verification_results):
        """
        Sets the cardholder_authentication_verification_results of this CardvalidationpostResponse.
        Results of the Cardholder Authentication Verification Value (CAVV) validation. <br>Refer to <a href=\"/request_response_codes#cardholder_authentication_verification_value\">CAVV Results Codes.</a><br><b>Note: </b>Reserved for future use

        :param cardholder_authentication_verification_results: The cardholder_authentication_verification_results of this CardvalidationpostResponse.
        :type: str
        """

        self._cardholder_authentication_verification_results = cardholder_authentication_verification_results

    @property
    def cvv2_result_code(self):
        """
        Gets the cvv2_result_code of this CardvalidationpostResponse.
        Results of the CVV2 validation for the primaryAccountNumber in the request.<br>Refer to <a href=\"/request_response_codes#card_verification2_results\">cvv2ResultsCode</a>

        :return: The cvv2_result_code of this CardvalidationpostResponse.
        :rtype: str
        """
        return self._cvv2_result_code

    @cvv2_result_code.setter
    def cvv2_result_code(self, cvv2_result_code):
        """
        Sets the cvv2_result_code of this CardvalidationpostResponse.
        Results of the CVV2 validation for the primaryAccountNumber in the request.<br>Refer to <a href=\"/request_response_codes#card_verification2_results\">cvv2ResultsCode</a>

        :param cvv2_result_code: The cvv2_result_code of this CardvalidationpostResponse.
        :type: str
        """

        self._cvv2_result_code = cvv2_result_code

    @property
    def response_code(self):
        """
        Gets the response_code of this CardvalidationpostResponse.
        The source for the response; typically, either the recipient issuer or a Visa system. <br>Refer to <a href=\"/request_response_codes#response_code\">Response Code</a>

        :return: The response_code of this CardvalidationpostResponse.
        :rtype: str
        """
        return self._response_code

    @response_code.setter
    def response_code(self, response_code):
        """
        Sets the response_code of this CardvalidationpostResponse.
        The source for the response; typically, either the recipient issuer or a Visa system. <br>Refer to <a href=\"/request_response_codes#response_code\">Response Code</a>

        :param response_code: The response_code of this CardvalidationpostResponse.
        :type: str
        """
        if response_code is None:
            raise ValueError("Invalid value for `response_code`, must not be `None`")

        self._response_code = response_code

    @property
    def action_code(self):
        """
        Gets the action_code of this CardvalidationpostResponse.
        The results of the transaction request.<br>Refer to <a href=\"/request_response_codes#action_code\">Action Code</a> <br><b>Note: </b>The VisaNet Response Code for the transaction

        :return: The action_code of this CardvalidationpostResponse.
        :rtype: str
        """
        return self._action_code

    @action_code.setter
    def action_code(self, action_code):
        """
        Sets the action_code of this CardvalidationpostResponse.
        The results of the transaction request.<br>Refer to <a href=\"/request_response_codes#action_code\">Action Code</a> <br><b>Note: </b>The VisaNet Response Code for the transaction

        :param action_code: The action_code of this CardvalidationpostResponse.
        :type: str
        """
        if action_code is None:
            raise ValueError("Invalid value for `action_code`, must not be `None`")

        self._action_code = action_code

    @property
    def address_verification_results(self):
        """
        Gets the address_verification_results of this CardvalidationpostResponse.
        Results of the Address Verification Service (AVS) validation for the PrimaryAccountNumber in the request. <br>Refer to <a href=\"/request_response_codes#address_verification_results\">Address Verification Results</a>

        :return: The address_verification_results of this CardvalidationpostResponse.
        :rtype: str
        """
        return self._address_verification_results

    @address_verification_results.setter
    def address_verification_results(self, address_verification_results):
        """
        Sets the address_verification_results of this CardvalidationpostResponse.
        Results of the Address Verification Service (AVS) validation for the PrimaryAccountNumber in the request. <br>Refer to <a href=\"/request_response_codes#address_verification_results\">Address Verification Results</a>

        :param address_verification_results: The address_verification_results of this CardvalidationpostResponse.
        :type: str
        """

        self._address_verification_results = address_verification_results

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, CardvalidationpostResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

# ----------------------------------------------------------------------------------------------------------------------
# © Copyright 2018 Visa. All Rights Reserved.
#
# NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
# and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
# rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
#
# By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
# (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
# programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
# THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
# FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
# ----------------------------------------------------------------------------------------------------------------------