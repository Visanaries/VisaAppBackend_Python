# coding: utf-8

"""
    Payment Account Validation API

    The Payment Account Validation API allows applications to run validations of the payment account before processing a transaction ensuring greater probability of success and allowing for a more seamless transaction flow.

    OpenAPI spec version: v1
    Contact: 
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import sys
import os
import re
import json

# python 2 and python 3 compatibility library
from six import iteritems

from ..configuration import Configuration
from ..api_client import ApiClient


class PavApi(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        config = Configuration()

        if api_client:
            self.api_client = api_client
        else:
            if not config.api_client:
                config.api_client = ApiClient()
            self.api_client = config.api_client

    def postcardvalidation(self, cardvalidationpost_payload, cardvalidationpost_payload2, cardvalidationpost_payload3, cardvalidationpost_payload4, cardvalidationpost_payload5, cardvalidationpost_payload6, cardvalidationpost_payload7, cardvalidationpost_payload8, cardvalidationpost_payload9, **kwargs):
        """
        Perform validations of the payment account
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.postcardvalidation(cardvalidationpost_payload, cardvalidationpost_payload2, cardvalidationpost_payload3, cardvalidationpost_payload4, cardvalidationpost_payload5, cardvalidationpost_payload6, cardvalidationpost_payload7, cardvalidationpost_payload8, cardvalidationpost_payload9, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param CardvalidationpostPayload cardvalidationpost_payload: The primary account number for which account validations are being performed (required)
        :param CardvalidationpostPayload cardvalidationpost_payload2: The expiration date for the primaryAccountNumber in the request. The date should not be a past date.</br>Required when the cvv2Value is present. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload3:  (required)
        :param CardvalidationpostPayload cardvalidationpost_payload4: The cardCvv2Value value provided by the account holder for the primaryAccountNumber in the request.</br>Required when addressVerificationResults is not present. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload5: This is an optional field.  The clients of Funds Transfer APIs can choose to provide acquiringBin for reporting purpose.  The Bank Identification Number (BIN) under which your Funds Transfer is registered. This must match the information provided during enrollment. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload6: This is an optional field. If acquiringBin is provided, it is highly recommended that acquirerCountryCode is also provided.</br>The clients of Funds Transfer APIs can choose to provide acquirerCountryCode for reporting purpose.</br>Use a 3-digit numeric country code for the country where the Funds Transfer solution is registered. This must match the information provided during program enrollment.<br>Refer to <a href=\"/request_response_codes#iso_country_and_currency_codes\">ISO Codes</a> (required)
        :param CardvalidationpostPayload cardvalidationpost_payload7: This is an optional field. The clients of Funds Transfer APIs can choose to provide card acceptor information for reporting purposes. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload8: This is an optional field. It is recommended that the clients of Funds Transfer APIs provide systemsTraceAuditNumber for tie the calls with a single funds transfer transaction. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload9: This is an optional field. It is recommended that the clients of Funds Transfer APIs provide retrievalReferenceNumber for tie the calls with a single funds transfer transaction.</br>Recommended Format: ydddhhnnnnnn</br>The first fours digits must be a valid yddd date in the Julian date format, where the first digit = 0-9 (last digit of current year) and the next three digits = 001-366 (number of the day in the year).</br>hh can be the two digit hour in a 24 hour clock (00-23) during which the transaction is performed.</br>nnnnnn can be the systemsTraceAuditNumber or any 6 digit number. (required)
        :return: CardvalidationpostResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.postcardvalidation_with_http_info(cardvalidationpost_payload, cardvalidationpost_payload2, cardvalidationpost_payload3, cardvalidationpost_payload4, cardvalidationpost_payload5, cardvalidationpost_payload6, cardvalidationpost_payload7, cardvalidationpost_payload8, cardvalidationpost_payload9, **kwargs)
        else:
            (data) = self.postcardvalidation_with_http_info(cardvalidationpost_payload, cardvalidationpost_payload2, cardvalidationpost_payload3, cardvalidationpost_payload4, cardvalidationpost_payload5, cardvalidationpost_payload6, cardvalidationpost_payload7, cardvalidationpost_payload8, cardvalidationpost_payload9, **kwargs)
            return data

    def postcardvalidation_with_http_info(self, cardvalidationpost_payload, cardvalidationpost_payload2, cardvalidationpost_payload3, cardvalidationpost_payload4, cardvalidationpost_payload5, cardvalidationpost_payload6, cardvalidationpost_payload7, cardvalidationpost_payload8, cardvalidationpost_payload9, **kwargs):
        """
        Perform validations of the payment account
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.postcardvalidation_with_http_info(cardvalidationpost_payload, cardvalidationpost_payload2, cardvalidationpost_payload3, cardvalidationpost_payload4, cardvalidationpost_payload5, cardvalidationpost_payload6, cardvalidationpost_payload7, cardvalidationpost_payload8, cardvalidationpost_payload9, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param CardvalidationpostPayload cardvalidationpost_payload: The primary account number for which account validations are being performed (required)
        :param CardvalidationpostPayload cardvalidationpost_payload2: The expiration date for the primaryAccountNumber in the request. The date should not be a past date.</br>Required when the cvv2Value is present. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload3:  (required)
        :param CardvalidationpostPayload cardvalidationpost_payload4: The cardCvv2Value value provided by the account holder for the primaryAccountNumber in the request.</br>Required when addressVerificationResults is not present. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload5: This is an optional field.  The clients of Funds Transfer APIs can choose to provide acquiringBin for reporting purpose.  The Bank Identification Number (BIN) under which your Funds Transfer is registered. This must match the information provided during enrollment. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload6: This is an optional field. If acquiringBin is provided, it is highly recommended that acquirerCountryCode is also provided.</br>The clients of Funds Transfer APIs can choose to provide acquirerCountryCode for reporting purpose.</br>Use a 3-digit numeric country code for the country where the Funds Transfer solution is registered. This must match the information provided during program enrollment.<br>Refer to <a href=\"/request_response_codes#iso_country_and_currency_codes\">ISO Codes</a> (required)
        :param CardvalidationpostPayload cardvalidationpost_payload7: This is an optional field. The clients of Funds Transfer APIs can choose to provide card acceptor information for reporting purposes. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload8: This is an optional field. It is recommended that the clients of Funds Transfer APIs provide systemsTraceAuditNumber for tie the calls with a single funds transfer transaction. (required)
        :param CardvalidationpostPayload cardvalidationpost_payload9: This is an optional field. It is recommended that the clients of Funds Transfer APIs provide retrievalReferenceNumber for tie the calls with a single funds transfer transaction.</br>Recommended Format: ydddhhnnnnnn</br>The first fours digits must be a valid yddd date in the Julian date format, where the first digit = 0-9 (last digit of current year) and the next three digits = 001-366 (number of the day in the year).</br>hh can be the two digit hour in a 24 hour clock (00-23) during which the transaction is performed.</br>nnnnnn can be the systemsTraceAuditNumber or any 6 digit number. (required)
        :return: CardvalidationpostResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['cardvalidationpost_payload', 'cardvalidationpost_payload2', 'cardvalidationpost_payload3', 'cardvalidationpost_payload4', 'cardvalidationpost_payload5', 'cardvalidationpost_payload6', 'cardvalidationpost_payload7', 'cardvalidationpost_payload8', 'cardvalidationpost_payload9']
        all_params.append('callback')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method postcardvalidation" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'cardvalidationpost_payload' is set
        if ('cardvalidationpost_payload' not in params) or (params['cardvalidationpost_payload'] is None):
            raise ValueError("Missing the required parameter `cardvalidationpost_payload` when calling `postcardvalidation`")
        # verify the required parameter 'cardvalidationpost_payload2' is set
        if ('cardvalidationpost_payload2' not in params) or (params['cardvalidationpost_payload2'] is None):
            raise ValueError("Missing the required parameter `cardvalidationpost_payload2` when calling `postcardvalidation`")
        # verify the required parameter 'cardvalidationpost_payload3' is set
        if ('cardvalidationpost_payload3' not in params) or (params['cardvalidationpost_payload3'] is None):
            raise ValueError("Missing the required parameter `cardvalidationpost_payload3` when calling `postcardvalidation`")
        # verify the required parameter 'cardvalidationpost_payload4' is set
        if ('cardvalidationpost_payload4' not in params) or (params['cardvalidationpost_payload4'] is None):
            raise ValueError("Missing the required parameter `cardvalidationpost_payload4` when calling `postcardvalidation`")
        # verify the required parameter 'cardvalidationpost_payload5' is set
        if ('cardvalidationpost_payload5' not in params) or (params['cardvalidationpost_payload5'] is None):
            raise ValueError("Missing the required parameter `cardvalidationpost_payload5` when calling `postcardvalidation`")
        # verify the required parameter 'cardvalidationpost_payload6' is set
        if ('cardvalidationpost_payload6' not in params) or (params['cardvalidationpost_payload6'] is None):
            raise ValueError("Missing the required parameter `cardvalidationpost_payload6` when calling `postcardvalidation`")
        # verify the required parameter 'cardvalidationpost_payload7' is set
        if ('cardvalidationpost_payload7' not in params) or (params['cardvalidationpost_payload7'] is None):
            raise ValueError("Missing the required parameter `cardvalidationpost_payload7` when calling `postcardvalidation`")
        # verify the required parameter 'cardvalidationpost_payload8' is set
        if ('cardvalidationpost_payload8' not in params) or (params['cardvalidationpost_payload8'] is None):
            raise ValueError("Missing the required parameter `cardvalidationpost_payload8` when calling `postcardvalidation`")
        # verify the required parameter 'cardvalidationpost_payload9' is set
        if ('cardvalidationpost_payload9' not in params) or (params['cardvalidationpost_payload9'] is None):
            raise ValueError("Missing the required parameter `cardvalidationpost_payload9` when calling `postcardvalidation`")


        collection_formats = {}

        path = '/pav/v1/cardvalidation'.replace('{format}', 'json')
        resource_path = 'cardvalidation'
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'cardvalidationpost_payload9' in params:
            body_params = params['cardvalidationpost_payload9']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept(['application/json'])

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type(['application/json'])

        # Authentication setting
        auth_settings = ['basicAuth']

        return self.api_client.call_api(path, resource_path, 'POST',
                                        path_params,
                                        query_params,
                                        header_params,
                                        body=body_params,
                                        post_params=form_params,
                                        files=local_var_files,
                                        response_type='CardvalidationpostResponse',
                                        auth_settings=auth_settings,
                                        callback=params.get('callback'),
                                        _return_http_data_only=params.get('_return_http_data_only'),
                                        _preload_content=params.get('_preload_content', True),
                                        _request_timeout=params.get('_request_timeout'),
                                        collection_formats=collection_formats)

# ----------------------------------------------------------------------------------------------------------------------
# © Copyright 2018 Visa. All Rights Reserved.
#
# NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
# and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
# rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
#
# By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
# (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
# programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
# THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
# FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
# ----------------------------------------------------------------------------------------------------------------------